plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.3'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'jacoco'
}

group = 'com.bbthechange'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'io.micrometer:micrometer-core'
	implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'
	implementation 'io.github.boostchicken:spring-data-dynamodb:5.2.5'
	implementation 'software.amazon.awssdk:dynamodb:2.28.29'
	implementation 'software.amazon.awssdk:dynamodb-enhanced:2.28.29'
	implementation 'software.amazon.awssdk:s3:2.28.29'
	implementation 'software.amazon.awssdk:sns:2.28.29'
	implementation 'software.amazon.awssdk:ssm:2.28.29'
	implementation 'com.eatthepath:pushy:0.15.4'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'
	// For parsing schema.org data from HTML
	implementation 'org.jsoup:jsoup:1.17.1'
	// For security checks (IP address validation against CIDR blocks)
	implementation 'commons-net:commons-net:3.10.0'
	// For rate limiting cache
	implementation 'com.github.ben-manes.caffeine:caffeine:3.1.8'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.testcontainers:testcontainers:1.19.3'
	testImplementation 'org.testcontainers:junit-jupiter:1.19.3' 
	testImplementation 'org.testcontainers:localstack:1.19.3'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
	exclude '**/integration/**'  // Exclude integration tests directory
	exclude '**/PolymorphicGroupRepositoryImplTest*' // Exclude integration test by name
	exclude '**/GroupRepositoryImplTest*' // Exclude integration test by name
	finalizedBy jacocoTestReport
}

// Integration test task
task integrationTest(type: Test) {
	description = 'Run integration tests with TestContainers'
	group = 'verification'
	
	useJUnitPlatform()
	testClassesDirs = sourceSets.test.output.classesDirs
	classpath = sourceSets.test.runtimeClasspath
	
	include '**/integration/**'
	
	// Set system properties for integration tests
	systemProperty 'spring.profiles.active', 'integration'
	
	// Ensure Docker is available for TestContainers
	dependsOn 'testClasses'
	
	// Run after regular unit tests
	shouldRunAfter test
}

jacocoTestReport {
	dependsOn test
	reports {
		xml.required = true
		html.required = true
		csv.required = false
	}
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				minimum = 0.70
			}
		}
	}
}
